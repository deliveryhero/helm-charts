# Default values for toxiproxy.
# This is a YAML-formatted file.
# Declare variables to be passed into your templates.

replicaCount: 1

image:
  repository: shopify/toxiproxy
  tag: 2.1.4
  pullPolicy: IfNotPresent

imagePullSecrets: []
nameOverride: ""
fullnameOverride: ""

serviceAccount:
  # Specifies whether a service account should be created
  create: true
  # The name of the service account to use.
  # If not set and create is true, a name is generated using the fullname template
  name:

podSecurityContext: {}
  # fsGroup: 2000

securityContext: {}
  # capabilities:
  #   drop:
  #   - ALL
  # readOnlyRootFilesystem: true
  # runAsNonRoot: true
  # runAsUser: 1000

service:
  type: ClusterIP
  # Linked pair of internal and external ports in which the ToxiProxy API will be listening in.
  port: 80
  listeningPort: 8474
  # This can be used to limit API access to certain IPs/Localhost/Everywhere.
  listeningAddress: 0.0.0.0
  # Config file to create proxy rules on container startup. By default anything under ./consumers/<app>/* gets copied to this path.
  configJsonPath: /home/toxiproxy/proxies/config.json
  # Container ports that will be used for incoming routing rules.
  proxies:
    ports:
    # - 8080
    # - 8081

# Minimal consumer configuration. A 'consumer' is an instance of the application with its own settings and files.
consumer:
  name: example

ingress:
  enabled: true
  annotations: {}
    # kubernetes.io/ingress.class: nginx
    # kubernetes.io/tls-acme: "true"
  hosts:
    - host: chart-example.local
      paths:
        - /

  tls: []
  #  - secretName: chart-example-tls
  #    hosts:
  #      - chart-example.local

# Extra arguments that can be passed to the Docker image.
args:

environment: []

resources: {}
  # We usually recommend not to specify default resources and to leave this as a conscious
  # choice for the user. This also increases chances charts run on environments with little
  # resources, such as Minikube. If you do want to specify resources, uncomment the following
  # lines, adjust them as necessary, and remove the curly braces after 'resources:'.
  # limits:
  #   cpu: 100m
  #   memory: 128Mi
  # requests:
  #   cpu: 100m
  #   memory: 128Mi


deploymentAnnotations: {}

extraLabels: {}

nodeSelector: {}

tolerations: []

affinity: {}
