apiVersion: v1
name: locust
version: "0.33.0"
appVersion: 2.32.2
home: https://github.com/locustio/locust
icon: https://locust.io/static/img/logo.png
maintainers:
  - name: max-rocket-internet
    email: no-reply@deliveryhero.com
description: |
  A chart to install Locust, a scalable load testing tool written in Python.

  This chart will setup everything required to run a full distributed locust environment with any amount of workers.

  Locust requires locust files to execute load testing, and this chart provides different ways to populate locust files.

  ## Kubernetes ConfigMap

  This chart can create configmaps for storing the locust files in Kubernetes, this way there is no need to build custom docker images.

  By default it will install using an example locustfile and lib from [stable/locust/locustfiles/example](https://github.com/deliveryhero/helm-charts/tree/master/stable/locust/locustfiles/example). When you want to provide your own locustfile, you will need to create 2 configmaps using the structure from that example:

  ```console
  kubectl create configmap my-loadtest-locustfile --from-file path/to/your/main.py
  kubectl create configmap my-loadtest-lib --from-file path/to/your/lib/
  ```

  And then install the chart passing the names of those configmaps as values:

  ```console
  helm install locust oci://ghcr.io/deliveryhero/helm-charts/locust \
    --set loadtest.name=my-loadtest \
    --set loadtest.locust_locustfile_configmap=my-loadtest-locustfile \
    --set loadtest.locust_lib_configmap=my-loadtest-lib
  ```

  ## Git Sync

  Another way to fetch locust files in the pods is to continously track a git repository containing the files.

  While activating this feature, you also have to disable the default ConfigMap-based provisioning, through a custom `values.yaml` file:

  ```yaml
  loadtest:
    enabled = false
  locustfiles:
    gitSync:
      enabled = true
  ```

  Then configure the gitSync process to fetch the right repository and the right files:

  ```yaml
  locustfiles:
    gitSync:
      repo: https://github.com/username/reponame.git
  ```
