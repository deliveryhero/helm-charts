consumer:
  # consumer.name -- a name used for resources and settings in this WireMock
  name: example
  # consumer.hostname -- the public host name for this WireMock
  environment: {}
    # WM_LOGGING_LEVEL: INFO
  # consumer.args_include_default -- whether WireMock arguments for performance test setup should be included
  args_include_default: true
  # consumer.args -- custom WireMock startup arguments.
  args: []
  # consumer.stubs -- `ConfigMap`s with WireMock stubs `mappings` and/or `__files` folders.
  stubs: {}
  # consumer.initContainer -- support for stubs with large files using binary container with zip archive.
  initContainer: []
  # consumer.initVolume -- custom extra volume for the initialization container providing the zip archive.
  initVolume: []

service:
  type: ClusterIP
  port: 80

# pdb.enabled -- Whether to create a PodDisruptionBudget
pdb:
  enabled: false

ingress:
  # ingress.enabled -- whether to create an Ingress
  enabled: false
  # ingress.block_admin -- Whether to create an Ingress configuration snippet to block access to the admin API (recommended)
  block_admin: true
  className: ""
  annotations: {}
    # kubernetes.io/ingress.class: nginx
    # kubernetes.io/tls-acme: "true"
    # nginx.ingress.kubernetes.io/force-ssl-redirect: "true"
  hosts:
    - host: chart-example.local
      paths:
        - path: /
          pathType: ImplementationSpecific
  tls: []
  #  - secretName: chart-example-tls
  #    hosts:
  #      - chart-example.local

nameOverride: ""
fullnameOverride: ""
deploymentAnnotations: {}
serviceAnnotations: {}
podAnnotations: {}
extraLabels: {}
nodeSelector: {}
tolerations: []
affinity: {}

replicas: 1
strategy:
  type: RollingUpdate

image:
  repository: rodolpheche/wiremock
  tag: 2.26.0
  pullPolicy: IfNotPresent
  pullSecrets: []

init:
  image:
    # init.image.repository -- the docker repository and image to be used for the init container.
    repository: busybox
    # init.image.tag -- the docker image tag for the init container image
    tag: latest

resources:
  requests:
    cpu: 1
    memory: 3Gi
  limits:
    cpu: 2  # double cpu to avoid throttling and slow pod startup
    memory: 3Gi

# JVM memory configuration according to configured resources and thread count
# See https://github.com/cloudfoundry/java-buildpack-memory-calculator
java:
  xms: 2G
  xmx: 2G
  mms: 256M

probes:
  readiness: true
  liveness: true

hpa:
  enabled: true
  minpods: 1
  maxpods: 40
  cputhreshold: 40
